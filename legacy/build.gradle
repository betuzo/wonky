buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.11.3'
    classpath 'com.bertramlabs.plugins:coffee-asset-pipeline:2.11.3'

    classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.13.RELEASE")
    classpath 'com.bluepapa32:gradle-watch-plugin:0.1.5'
    classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
    classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.7'
    //TODO: remove?
    //classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
  }
}

plugins {
  id "com.github.hierynomus.license" version "0.11.0"
  id 'net.researchgate.release' version '2.7.0'
}

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'codenarc'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
//TODO: remove?
//apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.bluepapa32.watch'
apply plugin: "io.spring.dependency-management"
apply plugin: 'com.bertramlabs.asset-pipeline'
apply plugin: 'org.asciidoctor.convert'

ext {
  groovyVersion = '2.4.7'
  javaVersion = '1.8'
  spockVersion = '1.1-groovy-2.4'
}

sourceCompatibility = project.javaVersion
targetCompatibility = project.javaVersion

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
  compile "org.springframework.boot:spring-boot-starter-web"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-cache"
  compile 'com.domingosuarez.boot:spring-boot-starter-jade4j:0.3.2'
  compile 'com.github.groovy-wslite:groovy-wslite:1.1.3'

  compile 'org.webjars:webjars-locator:0.34'
  compile 'org.webjars:zeptojs:1.1.6'

  runtime 'net.sf.ehcache:ehcache'

  testCompile "org.spockframework:spock-core:${spockVersion}"
  testCompile "org.spockframework:spock-spring:${spockVersion}"
  testCompile "org.springframework:spring-test"
  testCompile "org.springframework.boot:spring-boot-starter-test"
  testCompile 'cglib:cglib-nodep:3.2.6'
  testCompile 'com.github.kristofa:mock-http-server:4.1'

  codenarc 'org.codenarc:CodeNarc:0.26.0'
  codenarc "org.codehaus.groovy:groovy-all:${groovyVersion}"
}

jacoco {
  toolVersion = "0.7.6.201602180812"
}

jacocoTestReport {
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
    html.enabled = true
  }

  afterEvaluate {
    classDirectories = files(classDirectories.files.collect {
      fileTree(dir: it, exclude: ['**/WonkyApp.class', '**/SlackOrg*.class', '**/WebJar.class'])
    })
  }
}

codenarc {
  toolVersion = '0.25.2'
  configFile = file('./config/codenarc/codenarc.groovy')
}

codenarcTest {
  configFile = file('./config/codenarc/test.groovy')
}

watch {
  groovy {
    files files('src/main/groovy')
    tasks 'compileGroovy'
  }
  asciidoc {
    files files('src/docs/asciidoc')
    tasks 'asciidoctor'
  }
}

assets {
  compileDir = 'build/resources/main/static/assets'
}

license {
  excludes(["**/*.yml", "**/*.jade", "**/*.svg", '**/*.txt', '**/*.css'])
  header rootProject.file('HEADER_LICENSE')
  strictCheck true
}

asciidoctor {
  attributes = [
    toc                    : 'left',
    doctype                : 'book',
    icons                  : 'font',
    encoding               : 'utf-8',
    sectlink               : true,
    sectanchors            : true,
    numbered               : true,
    linkattrs              : true,
    linkcss                : true,
    'source-highlighter'   : 'coderay',
    'coderay-linenums-mode': 'table',
  ]

  sources {
    include 'index.adoc'
  }
  resources {
    from('src/main/resources/') {
      include '*.png'
    }
  }
}

springBoot {
  executable = true
}

bootRepackage {
  embeddedLaunchScriptProperties = [
    'initInfoProvides'        : "wonky",
    'initInfoShortDescription': "Wonky",
    'initInfoDescription'     : "Wonky"
  ]
}

processResources.dependsOn assetCompile
classes.dependsOn licenseFormat
jacocoTestReport.dependsOn check
bootRepackage.dependsOn jacocoTestReport
